/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&mt>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        mouse {
            bindings = <&to 3>;
            key-positions = <20 19>;
            layers = <1>;
            timeout-ms = <400>;
        };

        Layer_3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    macros {
        win_vdesk_right: win_vdesk_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(RIGHT))>;
            label = "WIN_VDESK_RIGHT";
        };

        win_vdesk_left: win_vdesk_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LEFT_ARROW))>;
            label = "WIN_VDESK_LEFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB        &kp Q  &kp W  &kp F     &kp P  &kp B         &kp J      &kp L  &kp U      &kp Y    &kp SEMICOLON  &mt LCTRL BACKSLASH
&kp BACKSPACE  &kp A  &kp R  &kp S     &kp T  &kp G         &kp M      &kp N  &kp E      &kp I    &kp O          &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp D  &kp V         &kp K      &kp H  &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                             &kp LGUI  &mo 1  &kp RETURN    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6     &kp N7    &kp N8    &kp N9     &kp N0            &kp GRAVE
&kp BACKSPACE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &win_vdesk_right  &kp PG_UP
&kp LSHFT      &kp LG(F4)    &kp LCTRL     &trans        &trans        &bt BT_CLR      &kp CAPS   &kp HOME  &trans    &trans     &win_vdesk_left   &kp PG_DN
                                           &kp LGUI      &trans        &kp RETURN      &kp SPACE  &kp RGUI  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp ESC        &kp EXCL   &kp AT        &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp BACKSPACE  &trans     &trans        &trans    &trans    &kp MINUS    &kp EQUAL  &kp LBRC  &kp RIGHT_BRACE  &trans    &kp BSLH  &kp GRAVE
&kp LSHFT      &kp LCTRL  &kp LEFT_ALT  &kp DEL   &trans    &kp UNDER    &kp PLUS   &kp LBKT  &kp RBKT         &trans    &kp PIPE  &kp TILDE
                                        &kp LGUI  &trans    &kp SPACE    &kp RET    &trans    &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
